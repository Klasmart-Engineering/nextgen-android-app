name: Main Build Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - bugfix/*      
  pull_request:
    branches:
      - '*'  

jobs:
  validation:
    name: Validation Stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
        
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

  build:
    name: Build Stage
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      
      - name: Cache Gradle Files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: cache-gradle
          
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Decode Keystore
        env:
            ENCODED_KEYSTORE: ${{ secrets.DEBUG_PROPERTIES  }}
            SIGNING_PROPERTIES: ${{ secrets.DEBUG_KEYSTORE }}
        run: |            
            echo $ENCODED_KEYSTORE | base64 -di > "${GITHUB_WORKSPACE}"/kidsloopdebug.jks
            echo $SIGNING_PROPERTIES > "${GITHUB_WORKSPACE}"/keystore.properties
            # sed '$d' "${GITHUB_WORKSPACE}"/keystore.properties1 > "${GITHUB_WORKSPACE}"/keystore.properties1
            # echo "storeFile=kidsloopdebug.jks" >> "${GITHUB_WORKSPACE}"/app/keystore.properties
            echo "any diff?"
            diff keystore.properties1 keystore.properties
            echo "checksums?"
            sum keystore.properties1
            sum keystore.properties
            echo "current dir"
            pwd
            echo "root level"           
            ls -l 
            echo "app level"
            ls -l app/
          
      # - name: Run Gradle
      #   run: ./gradlew build check --continue

      # - if: ${{ (github.event != 'pull_request')  }}
      #   name: Run Android Lint 
      #   uses: dvdandroid/action-android-lint@master        
      #   with:
      #     github_token: ${{ secrets.github_token }}
      #     lint_xml_file: app/build/reports/lint-results-debug.xml   

      # - if: ${{ (github.event.pull_request)  }}
      #   name: Run Android Lint For Pull Requests
      #   uses: dvdandroid/action-android-lint@master
      #   with:
      #     github_token: ${{ secrets.github_token }}
      #     lint_xml_file: app/build/reports/lint-results-debug.xml 
      #     reporter: github-pr-review       

      # - if: always()
      #   #if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'  || github.event.pull_request.base.ref == 'develop') }}
      #   name: Create Debug APK
      #   run: ./gradlew -Pci --console=plain :app:assembleDebug

      # - if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event.pull_request.base.ref == 'develop'}}
      #   name: Upload Debug APK
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app
      #     path: app/build/outputs/apk/debug/app-debug.apk

      # - if: ${{ github.ref == 'refs/heads/main'  || github.event.pull_request.base.ref == 'main'}}
      #   name: Create Release APK
      #   run: ./gradlew -Pci --console=plain :app:assembleRelease

      # - if: ${{ github.ref == 'refs/heads/main'  || github.event.pull_request.base.ref == 'main'}}
      #   name: Upload Debug APK
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app
      #     path: app/build/outputs/apk/release/app-release-unsigned.apk 
          
      # - if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'}}
      #   name: Stop Gradle
      #   run: ./gradlew --stop
      
      # - if: always() 
      #   name: Cleanup Keystore        
      #   run: |            
      #       rm -rf  "${GITHUB_WORKSPACE}"/kidsloopdebug.jks
      #       rm -rf  "${GITHUB_WORKSPACE}"/keystore.properties
      #       pwd
      #       ls -l

      # - if: ${{ github.ref == 'refs/heads/main' }}
      #   name: Create Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     draft: false
      #     tag_name: latest
      #     files: app/build/outputs/apk/release/app-release-unsigned.apk

      # - name: Publish to Slack 
      #   if: always()
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     fields: repo,commit,message,author,ref,pullRequest,eventName,workflow
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEB_HOOK }}      
